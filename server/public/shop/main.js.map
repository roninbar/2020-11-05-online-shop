{"version":3,"sources":["./src/app/services/alert.service.ts","./src/environments/environment.ts","./src/app/services/product.service.ts","./src/app/thank-you-page/thank-you.page.ts","./src/app/thank-you-page/thank-you.page.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/cart.service.ts","./src/app/shopping-page/shopping-page.component.ts","./src/app/shopping-page/shopping-page.component.html","./src/app/checkout-page/order-items-table/order-items-table.component.ts","./src/app/checkout-page/order-items-table/order-items-table.component.html","./src/app/services/order.service.ts","./src/app/services/auth.service.ts","./src/app/checkout-page/checkout-page.component.ts","./src/app/checkout-page/checkout-page.component.html","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/order-item.ts","./src/app/services/user.service.ts","./src/app/signup-page/signup.page.ts","./src/app/signup-page/signup.page.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  public alert: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() { }\n\n  postAlert(message: string): void {\n    this.alert.emit(message);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IProduct } from '../product';\r\nimport { IProductCategory } from '../product-category';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  getAllCategoriesRx(): Observable<Array<IProductCategory>> {\r\n    return this.http.get<Array<IProductCategory>>('/api/category/all');\r\n  }\r\n\r\n  getAllProductsInCategoryRx(categoryId: string): Observable<Array<IProduct>> {\r\n    return this.http.get<Array<IProduct>>(`/api/category/${categoryId}/product/all`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderItem } from '../order-item';\r\nimport { OrderService } from '../services/order.service';\r\nimport { ProductService } from '../services/product.service';\r\n\r\n@Component({\r\n  templateUrl: './thank-you.page.html',\r\n  styleUrls: ['./thank-you.page.css']\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class ThankYouPage {\r\n\r\n  public lastOrder = this.orderService.getLastOrder();\r\n\r\n  constructor(\r\n    public orderService: OrderService,\r\n  ) { }\r\n\r\n  public getTotalItems(): number {\r\n    return this.lastOrder.items.reduce((total, { quantity }) => total + quantity, 0);\r\n  }\r\n\r\n}\r\n","<main class=\"d-flex flex-column p-5\">\r\n    <h4>Order #{{lastOrder._id}}</h4>\r\n    <h5>Placed on {{lastOrder.createdAt | date:\"full\"}}</h5>\r\n    <hr>\r\n    <h4>Order Summary</h4>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Quantity</th>\r\n                <th scope=\"col\">Price</th>\r\n                <th scope=\"col\">Total</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of lastOrder.items; let k = index\">\r\n                <th scope=\"row\">{{k + 1}}</th>\r\n                <td>{{item.product.name}}</td>\r\n                <td>{{item.quantity}}</td>\r\n                <td>{{item.purchasePrice | currency}}</td>\r\n                <td>{{item.quantity * item.purchasePrice | currency}}</td>\r\n            </tr>\r\n        </tbody>\r\n        <tfoot>\r\n            <tr>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\">Total:</th>\r\n                <th scope=\"col\">{{getTotalItems()}}</th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\">{{lastOrder.total | currency}}</th>\r\n            </tr>\r\n        </tfoot>\r\n    </table>\r\n    <hr>\r\n    <h4>Delivery</h4>\r\n    <table class=\"table\">\r\n        <tbody>\r\n            <tr>\r\n                <th scope=\"row\">City</th>\r\n                <td>{{lastOrder.delivery.to.city}}</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">Street</th>\r\n                <td>{{lastOrder.delivery.to.street}}</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">House</th>\r\n                <td>{{lastOrder.delivery.to.house}}</td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>{{lastOrder.delivery.on | date:\"longDate\"}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <hr>\r\n    <h4>Payment Details</h4>\r\n    <table class=\"table\">\r\n        <tbody>\r\n            <tr>\r\n                <th scope=\"row\">CC Number</th>\r\n                <td>{{lastOrder.payment.cc.number}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <a [href]=\"lastOrder.receiptUrl\" download>Download PDF</a>\r\n    <!-- <img src=\"/assets/thankyoucomeagain.jpg\" alt=\"Thank you! Come again!\"> -->\r\n</main>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, filter, map, shareReplay, switchMap } from 'rxjs/operators';\r\nimport { OrderItem } from './order-item';\r\nimport { IProductCategory } from './product-category';\r\nimport { AlertService } from './services/alert.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { CartService } from './services/cart.service';\r\nimport { ProductService } from './services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public title = 'Kwik-E-Mart';\r\n\r\n  public readonly allCategories$: Observable<Array<IProductCategory>> = this.productService.getAllCategoriesRx();\r\n\r\n  public readonly categoryName$: Observable<string> = this.router.events.pipe(\r\n    filter((event) => event instanceof NavigationEnd),\r\n    switchMap(() => this.route.firstChild?.params || of({})),\r\n    map((params: any) => params.categoryId),\r\n    filter((category) => !!category),\r\n    distinctUntilChanged(),\r\n    switchMap((category) => this.getCategoryNameRx(category)),\r\n    shareReplay(1),\r\n  );\r\n\r\n  public constructor(\r\n    public authService: AuthService,\r\n    public cartService: CartService,\r\n    private alertService: AlertService,\r\n    private productService: ProductService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar,\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    document.title = this.title;\r\n    this.alertService.alert.subscribe((message) => this.openSnackBar(message));\r\n  }\r\n\r\n  public goToHomePageAsync(): Promise<boolean> {\r\n    return this.router.navigateByUrl('/');\r\n  }\r\n\r\n  public goToCheckOutAsync(): Promise<boolean> {\r\n    return this.router.navigateByUrl('/checkout');\r\n  }\r\n\r\n  public productIdOfCartItem(index: number, item: OrderItem): string {\r\n    return item.product._id;\r\n  }\r\n\r\n  public logOut(): void {\r\n    this.authService.logOutRx().subscribe();\r\n  }\r\n\r\n  private openSnackBar(message: string): void {\r\n    this.snackBar.open(message, 'Dismiss');\r\n  }\r\n\r\n  private getCategoryNameRx(categoryId: string): Observable<string> {\r\n    return this.allCategories$.pipe(\r\n      map(categories => categories.find(category => category._id === categoryId).name),\r\n    );\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n\r\n    <!-- Categories Menu -->\r\n    <mat-menu #categories>\r\n        <mat-toolbar>Categories</mat-toolbar>\r\n        <mat-nav-list>\r\n            <a mat-list-item *ngFor=\"let category of allCategories$ | async\" routerLink=\"/category/{{category._id}}\">{{category.name}}</a>\r\n        </mat-nav-list>\r\n    </mat-menu>\r\n\r\n    <!-- Shopping Cart Sidenav -->\r\n    <mat-sidenav class=\"sidenav\" #cart position=\"end\" fixedInViewport mode=\"over\">\r\n        <mat-toolbar class=\"justify-content-center\">Your Cart</mat-toolbar>\r\n        <form class=\"container-fluid\" (ngSubmit)=\"goToCheckOutAsync(); cart.toggle()\">\r\n            <div class=\"row row-cols-1 p-2\">\r\n                <div *ngIf=\"cartService.isEmpty()\">\r\n                    <div class=\"card card-body\">\r\n                        <h5 class=\"text-center\">The cart is empty.</h5>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngIf=\"!cartService.isEmpty()\">\r\n                    <div class=\"card\" *ngFor=\"let item of cartService.getAllItems(); trackBy: productIdOfCartItem\">\r\n                        <img class=\"card-img-top\" [src]=\"item.product.imageUrl\" [alt]=\"item.product.name\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-title text-center\">{{item.product.name}}</h5>\r\n                            <h6 class=\"card-subtitle text-center\">{{item.product.price | currency}}</h6>\r\n                            <input class=\"form-control mt-3\" type=\"number\" min=\"1\" [name]=\"item.product._id\" [value]=\"item.quantity\"\r\n                                (input)=\"cartService.setItem(item.product, +$event.target.value)\">\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"bg-dark\">\r\n                    <h5 class=\"text-center\">Cart Total: {{cartService.getTotalPrice() | currency}}</h5>\r\n                </ng-container>\r\n                <button class=\"btn btn-primary w-100 mt-3\" type=\"submit\" [disabled]=\"cartService.isEmpty()\">Check Out</button>\r\n            </div>\r\n        </form>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n\r\n        <!-- Main Toolbar -->\r\n        <mat-toolbar color=\"primary\">\r\n            <mat-toolbar-row>\r\n                <!-- Main Menu Button -->\r\n                <button type=\"button\" mat-icon-button>\r\n                    <mat-icon>menu</mat-icon>\r\n                </button>\r\n                <!-- Website Title -->\r\n                <span class=\"mx-3 cursor-pointer\" (click)=\"goToHomePageAsync()\">{{title}}</span>\r\n                <span class=\"flex-fill\"></span>\r\n                <!-- Category Menu Button -->\r\n                <button *ngIf=\"!!(categoryName$ | async)\" [matMenuTriggerFor]=\"categories\">{{categoryName$ | async}}</button>\r\n                <span class=\"flex-fill\"></span>\r\n                <!-- Logged-In User + Logout Button + Shopping Cart Button -->\r\n                <ng-container *ngIf=\"!!authService.getLoggedInUser()\">\r\n                    <span>Hello, {{authService.getLoggedInUser().name.first}}!</span>\r\n                    <a class=\"ml-3 mr-1\" routerLink=\"/login\" (click)=\"logOut()\">Log Out</a>\r\n                    <!-- Shopping Cart Button -->\r\n                    <button type=\"button\" mat-icon-button [matBadge]=\"cartService.getTotalQuantity()\" [matBadgeHidden]=\"cartService.isEmpty()\"\r\n                        matBadgeColor=\"warn\" (click)=\"cart.toggle()\">\r\n                        <mat-icon>shopping_cart</mat-icon>\r\n                    </button>\r\n                </ng-container>\r\n            </mat-toolbar-row>\r\n        </mat-toolbar>\r\n\r\n        <router-outlet></router-outlet>\r\n\r\n    </mat-sidenav-content>\r\n\r\n</mat-sidenav-container>","import { LayoutModule } from '@angular/cdk/layout';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CheckoutPageComponent } from './checkout-page/checkout-page.component';\r\nimport { OrderItemsTableComponent } from './checkout-page/order-items-table/order-items-table.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { ShoppingPageComponent } from './shopping-page/shopping-page.component';\r\nimport { SignupPage } from './signup-page/signup.page';\r\nimport { ThankYouPage } from './thank-you-page/thank-you.page';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CheckoutPageComponent,\r\n    LoginPageComponent,\r\n    OrderItemsTableComponent,\r\n    ShoppingPageComponent,\r\n    SignupPage,\r\n    ThankYouPage,\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    LayoutModule,\r\n    MatBadgeModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatSidenavModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ICartItemsMap } from '../cart-items-map';\r\nimport { OrderItem } from '../order-item';\r\nimport { IProduct } from '../product';\r\n\r\nconst CARTITEMS = 'cartItems';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.validateStoredCart();\r\n  }\r\n\r\n  getAllItems(): Array<OrderItem> {\r\n    return Object.values(this.getCartItemsMap());\r\n  }\r\n\r\n  getTotalQuantity(): number {\r\n    return this.getTotal(item => item.quantity);\r\n  }\r\n\r\n  getTotalPrice(): number {\r\n    return this.getTotal(item => item.quantity * item.purchasePrice);\r\n  }\r\n\r\n  setItem(product: IProduct, quantity: number): void {\r\n    const map = this.getCartItemsMap();\r\n    if (quantity > 0) {\r\n      map[product._id] = new OrderItem(product, quantity, product.price);\r\n    }\r\n    else {\r\n      delete map[product._id];\r\n    }\r\n    this.setCartItemsMap(map);\r\n  }\r\n\r\n  empty(): void {\r\n    this.setCartItemsMap({});\r\n  }\r\n\r\n  isEmpty(): boolean {\r\n    return this.getTotal(item => 1) === 0;\r\n  }\r\n\r\n  private getTotal(selectTerm: (item: OrderItem) => number): number {\r\n    return Object.values(this.getCartItemsMap())\r\n      .map(selectTerm)\r\n      .reduce((total, term) => total + term, 0);\r\n  }\r\n\r\n  private getCartItemsMap(): ICartItemsMap {\r\n    return JSON.parse(localStorage.getItem(CARTITEMS) || '{}');\r\n  }\r\n\r\n  private setCartItemsMap(map: ICartItemsMap): void {\r\n    localStorage.setItem(CARTITEMS, JSON.stringify(map));\r\n  }\r\n\r\n  /**\r\n   * Validate localStorage.cartItems; delete it if it doesn't conform to the expected structure.\r\n   */\r\n  private validateStoredCart(): void {\r\n    const mapJson = localStorage.getItem(CARTITEMS);\r\n    // tslint:disable-next-line: label-position\r\n    test: {\r\n      if (typeof mapJson === 'string') {\r\n        const map = JSON.parse(mapJson);\r\n        if (map && typeof map === 'object' && Object.getPrototypeOf(map) === Object.prototype) {\r\n          const items: Array<OrderItem> = Object.values(map);\r\n          try {\r\n            if (items.some(({ product: { _id, name, price, imageUrl }, quantity }) => (\r\n              typeof _id !== 'string' ||\r\n              typeof name !== 'string' ||\r\n              typeof price !== 'number' ||\r\n              typeof imageUrl !== 'string' ||\r\n              typeof quantity !== 'number'\r\n            ))) {\r\n              break test;\r\n            }\r\n          }\r\n          catch (err) {\r\n            break test;\r\n          }\r\n        }\r\n        else {\r\n          break test;\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    if (mapJson) {\r\n      localStorage.removeItem(CARTITEMS);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ActivationEnd, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OrderItem } from '../order-item';\r\nimport { IProduct } from '../product';\r\nimport { IProductCategory } from '../product-category';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { CartService } from '../services/cart.service';\r\nimport { ProductService } from '../services/product.service';\r\n\r\n@Component({\r\n  templateUrl: './shopping-page.component.html',\r\n  styleUrls: ['./shopping-page.component.css']\r\n})\r\nexport class ShoppingPageComponent implements OnInit {\r\n\r\n  public readonly allCategories$: Observable<Array<IProductCategory>> = this.productService.getAllCategoriesRx();\r\n\r\n  public categoryName$: Observable<string> = this.getCategoryNameRx(this.getCategoryId());\r\n\r\n  public allProductsInCategory$: Observable<Array<IProduct>> = this.productService.getAllProductsInCategoryRx(this.getCategoryId());\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private cartService: CartService,\r\n    private productService: ProductService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const categoryId = this.route.snapshot.paramMap.get('categoryId');\r\n    this.router.events.subscribe((event) => {\r\n      if (event instanceof ActivationEnd) {\r\n        this.setProductCategory(this.getCategoryId());\r\n      }\r\n    });\r\n  }\r\n\r\n  cartIsEmpty(): boolean {\r\n    const cartItems = this.cartService.getAllItems();\r\n    return cartItems.length === 0;\r\n  }\r\n\r\n  getNumberOfCartItems(): number {\r\n    const cartItems = this.cartService.getAllItems();\r\n    return cartItems.reduce((a, { quantity: b }) => a + b, 0);\r\n  }\r\n\r\n  getAllCartItems(): Array<OrderItem> {\r\n    return this.cartService.getAllItems();\r\n  }\r\n\r\n  setCartItem(product: IProduct, quantity: number = 1): void {\r\n    this.cartService.setItem(product, quantity);\r\n  }\r\n\r\n  checkOutAsync(f): Promise<boolean> {\r\n    return this.router.navigateByUrl('/checkout');\r\n  }\r\n\r\n  logOut(): void {\r\n    this.authService.logOutRx().subscribe();\r\n  }\r\n\r\n  productIdOfProduct(index: number, product: IProduct): string {\r\n    return product._id;\r\n  }\r\n\r\n  productIdOfCartItem(index: number, item: OrderItem): string {\r\n    return item.product._id;\r\n  }\r\n\r\n  private setProductCategory(categoryId: string): void {\r\n    this.categoryName$ = this.getCategoryNameRx(categoryId);\r\n    this.allProductsInCategory$ = this.productService.getAllProductsInCategoryRx(categoryId);\r\n  }\r\n\r\n  private getCategoryNameRx(categoryId: string): Observable<string> {\r\n    return this.allCategories$.pipe(map(allCategories => allCategories.find(({ _id }) => _id === categoryId).name));\r\n  }\r\n\r\n  private getCategoryId(): string {\r\n    return this.route.snapshot.paramMap.get('categoryId');\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-6\">\r\n    <div class=\"px-0\" *ngFor=\"let product of allProductsInCategory$ | async; trackBy: productIdOfProduct\">\r\n      <div class=\"card m-2\">\r\n        <img class=\"card-img-top\" [src]=\"product.imageUrl\" [alt]=\"product.name\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">{{product.name}}</h5>\r\n          <h6 class=\"card-subtitle\">{{product.price | currency}}</h6>\r\n          <button type=\"button\" class=\"btn btn-primary mt-3\" (click)=\"setCartItem(product)\">\r\n            Add to Cart\r\n            <br />\r\n            <mat-icon>add_shopping_cart</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { OrderItem } from '../../order-item';\n\n@Component({\n  selector: 'app-order-items-table',\n  templateUrl: './order-items-table.component.html',\n  styleUrls: ['./order-items-table.component.css']\n})\nexport class OrderItemsTableComponent {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<OrderItem>;\n  @Input() dataSource: OrderItem[];\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['name', 'quantity', 'price', 'total'];\n\n  public totalItems(): number {\n    return this.dataSource.reduce((sum, { quantity }) => sum + quantity, 0);\n  }\n\n  public totalPrice(): number {\n    return this.dataSource.reduce((sum, { quantity, purchasePrice }) => sum + quantity * purchasePrice, 0);\n  }\n}\n","<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort [dataSource]=\"dataSource\">\r\n\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\r\n      <td mat-cell *matCellDef=\"let item\">{{item.product._id}}</td>\r\n      <td mat-footer-cell *matFooterCellDef>ID</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Product</th>\r\n      <td mat-cell *matCellDef=\"let item\">{{item.product.name}}</td>\r\n      <td mat-footer-cell *matFooterCellDef>Total</td>\r\n    </ng-container>\r\n\r\n    <!-- Quantity Column -->\r\n    <ng-container matColumnDef=\"quantity\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\r\n      <td mat-cell *matCellDef=\"let item\">{{item.quantity}}</td>\r\n      <td mat-footer-cell *matFooterCellDef>{{totalItems()}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Price Column -->\r\n    <ng-container matColumnDef=\"price\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\r\n      <td mat-cell *matCellDef=\"let item\">{{item.product.price | currency}}</td>\r\n      <td mat-footer-cell *matFooterCellDef></td>\r\n    </ng-container>\r\n\r\n    <!-- Total Column -->\r\n    <ng-container matColumnDef=\"total\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Total</th>\r\n      <td mat-cell *matCellDef=\"let item\">{{item.quantity * item.product.price | currency}}</td>\r\n      <td mat-footer-cell *matFooterCellDef>{{totalPrice() | currency}}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let item; columns: displayedColumns;\"></tr>\r\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n\r\n  </table>\r\n\r\n  <!-- <mat-paginator #paginator\r\n      [length]=\"dataSource?.length\"\r\n      [pageIndex]=\"0\"\r\n      [pageSize]=\"50\"\r\n      [pageSizeOptions]=\"[25, 50, 100, 250]\">\r\n  </mat-paginator> -->\r\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { IOrder } from '../order.interface';\r\n\r\nconst LASTORDER = 'lastOrder';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  placeOrderRx(fields: { [key: string]: string }): Observable<IOrder> {\r\n    return this.http\r\n      .post<IOrder>('/api/order', new HttpParams({ fromObject: fields }))\r\n      .pipe(tap(order => this.setLastOrder(order)));\r\n  }\r\n\r\n  public getLastOrder(): IOrder {\r\n    return JSON.parse(localStorage.getItem(LASTORDER));\r\n  }\r\n\r\n  private setLastOrder(order: IOrder): void {\r\n    localStorage.setItem(LASTORDER, JSON.stringify(order));\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { IUser } from './user.interface';\r\n\r\nconst USERLSKEY = 'user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  public getLoggedInUser(): IUser | null {\r\n    const userJson = localStorage.getItem(USERLSKEY);\r\n    return userJson && JSON.parse(userJson);\r\n  }\r\n\r\n  private setLoggedInUser(user: IUser): void {\r\n    if (user) {\r\n      localStorage.setItem(USERLSKEY, JSON.stringify(user));\r\n    }\r\n    else {\r\n      localStorage.removeItem(USERLSKEY);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log in.\r\n   * @param email E-Mail\r\n   * @param password Password\r\n   */\r\n  public logInRx(email: string, password: string): Observable<IUser> {\r\n    return this.http.post<IUser>('/api/auth/login', new HttpParams({ fromObject: { email, password } })).pipe(\r\n      tap(user => {\r\n        this.setLoggedInUser(user);\r\n        return user;\r\n      }),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log out.\r\n   */\r\n  public logOutRx(): Observable<void> {\r\n    this.setLoggedInUser(null);\r\n    return this.http.post<void>('/api/auth/logout', null);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { OrderItem } from '../order-item';\r\nimport { CartService } from '../services/cart.service';\r\nimport { OrderService } from '../services/order.service';\r\n\r\n@Component({\r\n  templateUrl: './checkout-page.component.html',\r\n  styleUrls: ['./checkout-page.component.css']\r\n})\r\nexport class CheckoutPageComponent {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public cartService: CartService,\r\n    private orderService: OrderService,\r\n  ) { }\r\n\r\n  placeOrder(f: NgForm): void {\r\n    this.orderService.placeOrderRx(f.value).subscribe(async () => {\r\n      this.cartService.empty();\r\n      await this.router.navigateByUrl('/thankyou');\r\n    });\r\n  }\r\n\r\n  productIdOfCartItem(index: number, item: OrderItem): string {\r\n    return item.product._id;\r\n  }\r\n}\r\n","<form method=\"post\" action=\"/api/order\" #f=\"ngForm\" (ngSubmit)=\"placeOrder(f)\">\r\n    <mat-vertical-stepper linear #stepper>\r\n        <mat-step label=\"Review your order.\">\r\n            <app-order-items-table [dataSource]=\"cartService.getAllItems()\"></app-order-items-table>\r\n            <ng-container *ngFor=\"let item of cartService.getAllItems(); let i = index; trackBy: productIdOfCartItem\">\r\n                <input type=\"hidden\" name=\"items[{{i}}][product]\" [ngModel]=\"item.product._id\">\r\n                <input type=\"hidden\" name=\"items[{{i}}][quantity]\" [ngModel]=\"item.quantity\">\r\n                <input type=\"hidden\" name=\"items[{{i}}][purchasePrice]\" [ngModel]=\"item.purchasePrice\">\r\n            </ng-container>\r\n            <input type=\"hidden\" name=\"total\" [ngModel]=\"cartService.getTotalPrice()\">\r\n            <div>\r\n                <button type=\"button\" mat-button matStepperNext>Next</button>\r\n            </div>\r\n        </mat-step>\r\n        <mat-step label=\"Choose your preferred time and place of delivery.\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Date</mat-label>\r\n                <input type=\"date\" matInput name=\"delivery[on]\" ngModel required>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>City</mat-label>\r\n                <input type=\"text\" matInput name=\"delivery[to][city]\" ngModel required>\r\n            </mat-form-field>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Street</mat-label>\r\n                    <input type=\"text\" matInput name=\"delivery[to][street]\" ngModel required>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>House #</mat-label>\r\n                    <input type=\"number\" matInput name=\"delivery[to][house]\" ngModel required>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <button type=\"button\" mat-button matStepperPrevious>Back</button>\r\n                <button type=\"button\" mat-button matStepperNext>Next</button>\r\n            </div>\r\n        </mat-step>\r\n        <mat-step label=\"Choose your payment method.\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Card Number</mat-label>\r\n                <input type=\"text\" matInput name=\"payment[cc][number]\" ngModel required>\r\n            </mat-form-field>\r\n            <div>\r\n                <button type=\"button\" mat-button matStepperPrevious>Back</button>\r\n                <button type=\"button\" mat-button matStepperNext>Next</button>\r\n            </div>\r\n        </mat-step>\r\n        <mat-step label=\"Place your order.\">\r\n            <button mat-raised-button color=\"primary\" type=\"submit\">Place Order</button>\r\n            <div>\r\n                <button type=\"button\" mat-button matStepperPrevious>Back</button>\r\n                <button type=\"button\" mat-button (click)=\"stepper.reset()\">Reset</button>\r\n            </div>\r\n        </mat-step>\r\n    </mat-vertical-stepper>\r\n</form>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AlertService } from '../services/alert.service';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent {\r\n\r\n  email: string;\r\n  password: string;\r\n\r\n  constructor(\r\n    private alertService: AlertService,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  onSubmit(): void {\r\n    this.authService.logInRx(this.email, this.password)\r\n      .pipe(catchError((error: HttpErrorResponse) => {\r\n        this.alertService.postAlert(error.statusText);\r\n        if (error.error instanceof ErrorEvent) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          console.error('An error occurred:', error.error.message);\r\n        } else {\r\n          // The backend returned an unsuccessful response code.\r\n          // The response body may contain clues as to what went wrong.\r\n          console.error(\r\n            `Backend returned code ${error.status}, ` +\r\n            `body was: ${error.error}`);\r\n        }\r\n        return throwError('Danger');\r\n      }))\r\n      .subscribe(async () => await this.router.navigateByUrl('/category/all'));\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"card col-10 mx-auto mt-5\">\r\n            <div class=\"card-body\">\r\n                <h1 class=\"card-title mb-4 mt-1 text-center\">Sign In</h1>\r\n                <!-- <p>\r\n                    <a href=\"\" class=\"btn btn-block btn-outline-info\"> <i class=\"fab fa-twitter\"></i>   Login via Twitter</a>\r\n                    <a href=\"\" class=\"btn btn-block btn-outline-primary\"> <i class=\"fab fa-facebook-f\"></i>   Login via facebook</a>\r\n                </p> -->\r\n                <!-- <hr> -->\r\n                <form novalidate (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <input type=\"email\" name=\"email\" autocomplete=\"email\" class=\"form-control p-3\" placeholder=\"E-Mail *\" required [(ngModel)]=\"email\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"password\" name=\"password\" autocomplete=\"current-password\" class=\"form-control p-3\" placeholder=\"Password *\" required [(ngModel)]=\"password\">\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"submit\" class=\"btn btn-primary btn-block text-uppercase\">Sign In</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <a routerLink=\"/signup\">Don't have an account? Sign up!</a>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { IProduct } from './product';\r\n\r\nexport class OrderItem {\r\n    constructor(\r\n        public product: IProduct,\r\n        public quantity: number,\r\n        public purchasePrice: number,\r\n    ) { }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IUser } from './user.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  createRx(user): Observable<IUser> {\n    return this.http.put<IUser>(`/api/user/${user._id}`, new HttpParams({ fromObject: user }));\n  }\n}\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertService } from '../services/alert.service';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.css']\n})\n// tslint:disable-next-line: component-class-suffix\nexport class SignupPage {\n\n  constructor(\n    private alertService: AlertService,\n    private userService: UserService,\n    private router: Router,\n  ) { }\n\n  public submit(f: NgForm): void {\n    this.userService.createRx(f.value).subscribe(async () => {\n      this.alertService.postAlert(`Congratulations, ${f.value.firstName}! You are now a member of Quik-E-Mart! Please log in using your e-mail and password.`);\n      return await this.router.navigateByUrl('/login');\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"card col-10 mx-auto mt-5\">\n            <div class=\"card-body\">\n                <form action=\"/api/user\" method=\"post\" #f=\"ngForm\" (ngSubmit)=\"submit(f)\">\n                    <h1 class=\"card-title mb-4 mt-1 text-center\">Sign Up</h1>\n                    <mat-horizontal-stepper linear #stepper>\n                        <mat-step label=\"Step 1\">\n                            <div class=\"form-group\">\n                                <input class=\"form-control p-3\" type=\"text\" name=\"_id\" id=\"id\" autocomplete=\"off\" placeholder=\"ID (ת.ז.)\" required ngModel>\n                            </div>\n                            <div class=\"form-group\">\n                                <input class=\"form-control p-3\" type=\"email\" name=\"email\" id=\"email\" autocomplete=\"email\" placeholder=\"E-Mail\" required ngModel>\n                            </div>\n                            <div class=\"form-group\">\n                                <input class=\"form-control p-3\" type=\"password\" name=\"password\" id=\"password\" autocomplete=\"new-password\" placeholder=\"Password\"\n                                    required ngModel>\n                            </div>\n                            <div class=\"form-group\">\n                                <input class=\"form-control p-3\" type=\"password\" name=\"passwordRepeat\" id=\"passwordRepeat\" autocomplete=\"off\" placeholder=\"Repeat Password\"\n                                    required ngModel>\n                            </div>\n                            <div>\n                                <button type=\"button\" mat-button matStepperNext>Next</button>\n                            </div>\n                        </mat-step>\n                        <mat-step label=\"Step 2\">\n                            <div class=\"form-group\">\n                                <select class=\"custom-select\" name=\"city\" id=\"city\" placeholder=\"City\" required ngModel>\n                                    <option value=\"Jerusalem\">Jerusalem</option>\n                                    <option value=\"Tel Aviv\">Tel Aviv</option>\n                                    <option value=\"Haifa\">Haifa</option>\n                                    <option value=\"Rishon LeZion\">Rishon LeZion</option>\n                                    <option value=\"Petah Tikva\">Petah Tikva</option>\n                                    <option value=\"Ashdod\">Ashdod</option>\n                                    <option value=\"Netanya\">Netanya</option>\n                                    <option value=\"Beer Sheva\">Beer Sheva</option>\n                                    <option value=\"Bnei Brak\">Bnei Brak</option>\n                                    <option value=\"Holon\">Holon</option>\n                                </select>\n                            </div>\n                            <div class=\"form-group\">\n                                <input class=\"form-control p-3\" type=\"text\" name=\"streetAddress\" id=\"streetAddress\" autocomplete=\"street-address\"\n                                    placeholder=\"Street Address\" required ngModel>\n                            </div>\n                            <div class=\"form-group\">\n                                <input class=\"form-control p-3\" type=\"text\" name=\"firstName\" id=\"firstName\" autocomplete=\"given-name\" placeholder=\"First Name\"\n                                    required ngModel>\n                            </div>\n                            <div class=\"form-group\">\n                                <input class=\"form-control p-3\" type=\"text\" name=\"lastName\" id=\"lastName\" autocomplete=\"family-name\" placeholder=\"Last Name\"\n                                    required ngModel>\n                            </div>\n                            <div class=\"form-group\">\n                                <button class=\"btn btn-primary btn-block text-uppercase\" type=\"submit\">Sign Up</button>\n                            </div>\n                            <div>\n                                <button type=\"button\" mat-button matStepperPrevious>Back</button>\n                                <button type=\"button\" mat-button (click)=\"stepper.reset()\">Reset</button>\n                            </div>\n                        </mat-step>\n                    </mat-horizontal-stepper>\n                    <div class=\"col-sm-12\">\n                        <a routerLink=\"/login\">Already have an account? Log in!</a>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean | Promise<boolean> {\n    return Boolean(this.authService.getLoggedInUser()) || this.router.navigateByUrl('/login');\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { CheckoutPageComponent } from './checkout-page/checkout-page.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { ShoppingPageComponent } from './shopping-page/shopping-page.component';\r\nimport { SignupPage } from './signup-page/signup.page';\r\nimport { ThankYouPage } from './thank-you-page/thank-you.page';\r\n\r\nconst routes: Routes = [\r\n  { path: 'signup', component: SignupPage },\r\n  { path: 'login', component: LoginPageComponent },\r\n  { path: 'category/:categoryId', component: ShoppingPageComponent, canActivate: [AuthGuard] },\r\n  { path: 'checkout', component: CheckoutPageComponent, canActivate: [AuthGuard] },\r\n  { path: 'thankyou', component: ThankYouPage, canActivate: [AuthGuard] },\r\n  { path: '', redirectTo: '/category/all', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}